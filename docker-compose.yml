services:
  app:
    build:
      context: ./config
      dockerfile: dockerfiles/nginx.Dockerfile
    env_file:
      - ./config/env/laravel/.env
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
      - mysql
      - mailhog
    networks:
      - laravel-dev  

  mysql:
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_DATABASE=homestead
      - MYSQL_USER=homestead
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql-db:/var/lib/mysql
    networks:
      - laravel-dev
      
  mysql-test:
    image: mysql:latest
    restart: always
    environment:
      - MYSQL_DATABASE=testing
      - MYSQL_USER=testing
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=secret
    ports:
      - "3366:3306"
    volumes:
      - ./data/mysql-db-test:/var/lib/mysql
    networks:
      - laravel-dev
    
  php:
    build:
      context: ./config
      dockerfile: dockerfiles/php.Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./src:/var/www/html
    networks:
      - laravel-dev 
  
  phpmyadmin:
    image: phpmyadmin:latest
    restart: always
    environment:
     - PMA_HOST=mysql
     - PMA_USER=homestead
     - PMA_PASSWORD=secret
    ports:
      - "8080:80"
    depends_on:
     - mysql
    networks:
      - laravel-dev
  
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"  
    networks:
      - laravel-dev
    
  composer:
    build:
      context: ./config
      dockerfile: dockerfiles/php.Dockerfile
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer' ]
    networks:
      - laravel-dev
        
  artisan:
    build:
      context: ./config
      dockerfile: dockerfiles/php.Dockerfile
    env_file:
      - ./config/env/laravel/.env
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel-dev
      
  artisan-test:
    build:
      context: ./config
      dockerfile: dockerfiles/php.Dockerfile
    env_file:
      - ./config/env/laravel/.env.testing
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql-test
    entrypoint: [ 'php', '/var/www/html/artisan', 'test' ]
    networks:
      - laravel-dev

networks:
  laravel-dev: